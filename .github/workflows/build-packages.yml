name: Build release artifacts

on:
  release:
    types:
      - created

permissions:
  contents: write
  actions: write

jobs:
  macos:
    name: Macos build
    runs-on: macos-12
    env:
      GOOS: darwin
      GOARCH: amd64
      CGO_ENABLED: 1
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-go@v2
          with:
            go-version: '1.16.6'
        - name: Build Macos executable
          run: |
            set -x
            go build -o dx-download-agent cmd/dx-download-agent/dx-download-agent.go
            chmod +x dx-download-agent
        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: dx-download-agent-macos
            path: ./dx-download-agent
        - name: Upload release asset
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: ./dx-download-agent
            asset_name: dx-download-agent-macos
            asset_content_type: binary/octet-stream
  windows:
    name: Windows build
    runs-on: windows-latest
    env:
      GOOS: windows
      GOARCH: amd64
      CGO_ENABLED: 1
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-go@v2
          with:
            go-version: '1.16.6'
        - name: go dependencies
          run: go get -u github.com/google/subcommands
        - name: Build Windows executable
          run: |
            go build -o dx-download-agent.exe cmd/dx-download-agent/dx-download-agent.go
            dir
        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: dx-download-agent-windows.exe
            path: ./dx-download-agent.exe
        - name: Upload release asset
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: ./dx-download-agent.exe
            asset_name: dx-download-agent-windows.exe
            asset_content_type: binary/octet-stream
  linux:
    name: Linux build
    runs-on: ubuntu-18.04
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 1
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-go@v2
          with:
            go-version: '1.16.6'
        - name: apt-get dependencies
          run: sudo apt-get install -y build-essential
        - name: Build Linux executable
          run: |
            set -x
            go build -o dx-download-agent cmd/dx-download-agent/dx-download-agent.go
            chmod +x dx-download-agent
        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: dx-download-agent-linux
            path: ./dx-download-agent
        - name: Upload release asset
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: ./dx-download-agent
            asset_name: dx-download-agent-linux
            asset_content_type: binary/octet-stream
  docker:
    name: Build and push Docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            dnanexus/dxda
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
